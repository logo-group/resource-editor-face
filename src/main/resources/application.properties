# Properties for use with AWS Elastic Beanstalk (see documentation)
#
# Logging level of SQL run. Change to DEBUG to print out SQL statements into logs
logging.level.org.hibernate.SQL=INFO
# Logging level of values passed to SQL statements. Change to TRACE to print out values in logs
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=INFO
#
logging.level.com.vaadin.spring.navigator.SpringViewProvider=WARN
logging.level.com.vaadin.spring.server.SpringUIProvider=WARN
# No need to presist sessions
server.session.persistent=false
# Put Vaadin into production mode
#vaadin.servlet.productionMode=true
# Use separate MySQL in AWS Elastic Beanstalk 
# spring.jpa.hibernate.ddl-auto=update
# spring.datasource.url=jdbc:mysql://${RDS_HOSTNAME}:${RDS_PORT}/${RDS_DB_NAME}
# spring.datasource.username=${RDS_USERNAME}
# spring.datasource.password=${RDS_PASSWORD}
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

#database1 properties
app.jplatform.connection.driverClassName = com.microsoft.sqlserver.jdbc.SQLServerDriver
app.jplatform.connection.url = jdbc:sqlserver://localhost;databaseName=reseditloc;
app.jplatform.connection.username = sa
app.jplatform.connection.password = can123

#database2 properties
app.tiger.connection.driverClassName = com.microsoft.sqlserver.jdbc.SQLServerDriver
app.tiger.connection.url = jdbc:sqlserver://localhost;databaseName=reseditloctest;
app.tiger.connection.username = sa
app.tiger.connection.password = can123

#additional properties
app.connection.jpa.properties.hibernate.hbm2ddl.auto = none
app.connection.jpa.properties.hibernate.showSql = false
app.connection.jpa.properties.hibernate.dialect = org.hibernate.dialect.SQLServer2012Dialect
app.connection.jpa.properties.hibernate.dataSourceClassName = com.microsoft.sqlserver.jdbc.SQLServerDataSource